no,question,solution,level
1,"A store manager wants to see a list of all films currently available in the catalog, but only their titles. Can you provide the query to get every film title from the database?",SELECT title FROM film;,easy
2,"The HR team needs to know all the staff members working in the stores, including their first and last names. Write a query that retrieves this information from the staff table.","SELECT first_name, last_name FROM staff;",easy
3,A marketing intern is creating a campaign and needs a list of customer emails to send out a newsletter. Write a query that selects all customer emails.,SELECT email FROM customer;,easy
4,A data analyst is preparing a report and needs to find out all the unique rating categories of films in the database. Write a query to return distinct ratings from the film table.,SELECT DISTINCT rating FROM film;,easy
5,"The sales team wants to check which customers are active. Write a query that shows first name, last name, and active status of all customers.","SELECT first_name, last_name, active FROM customer;",easy
6,A regional manager wants to know which films are longer than 120 minutes so that they can plan a 'long movie night' event. Write a query to list the film title and length for these films.,"SELECT title, length FROM film WHERE length > 120;",easy
7,A customer support agent needs to find all customers who live in Canada to prepare for a local survey. Write a query that shows the first and last name of customers living in Canada.,"SELECT first_name, last_name FROM customer INNER JOIN address ON customer.address_id = address.address_id INNER JOIN city ON address.city_id = city.city_id INNER JOIN country ON city.country_id = country.country_id WHERE country.country = 'Canada';",easy
8,The store owner wants to see which films fall under the 'Comedy' category. Write a query to return the film title and category name for all comedy films.,"SELECT film.title, category.name FROM film INNER JOIN film_category ON film.film_id = film_category.film_id INNER JOIN category ON film_category.category_id = category.category_id WHERE category.name = 'Comedy';",easy
9,The finance department wants to analyze rental activity. Write a query that retrieves the rental ID and rental date for all rentals made by customer with ID 10.,"SELECT rental_id, rental_date FROM rental WHERE customer_id = 10;",easy
10,"A team member is asked to check how many films are available for each rating category (like PG, R, G, etc.). Write a query to count films grouped by rating.","SELECT rating, COUNT(*) FROM film GROUP BY rating;",easy
1,"The manager wants to know which films are rented most frequently. Instead of just listing rentals directly, you are asked to first calculate counts and then return the titles of the top 5 most rented films.","WITH rental_counts AS (SELECT film_id, COUNT(*) AS total_rentals FROM rental INNER JOIN inventory USING(inventory_id) GROUP BY film_id) SELECT f.title, rc.total_rentals FROM film f JOIN rental_counts rc ON f.film_id = rc.film_id ORDER BY rc.total_rentals DESC LIMIT 5;",medium
2,A supervisor is curious which customers have spent more than 100 in total. Use a subquery to first calculate the total payments per customer and then filter those above 100.,"SELECT customer_id, first_name, last_name FROM customer WHERE customer_id IN (SELECT customer_id FROM payment GROUP BY customer_id HAVING SUM(amount) > 100);",medium
3,The staff needs to find which actors have worked in films that belong to the Action category. Use a subquery to first find film_ids in Action and then filter actors.,"SELECT DISTINCT a.actor_id, a.first_name, a.last_name FROM actor a JOIN film_actor fa ON a.actor_id = fa.actor_id WHERE fa.film_id IN (SELECT film_id FROM film_category WHERE category_id = (SELECT category_id FROM category WHERE name = 'Action'));",medium
4,The management wants to know which films are longer than the average film length in the database.,"SELECT title, length FROM film WHERE length > (SELECT AVG(length) FROM film);",medium
5,A clerk wants to check which stores have generated more total payment revenue than the other store. Use a CTE to calculate payments per store and then compare them.,"WITH store_totals AS (SELECT s.store_id, SUM(p.amount) AS revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN store s ON i.store_id = s.store_id GROUP BY s.store_id) SELECT * FROM store_totals ORDER BY revenue DESC;",medium
6,The team wants to rank films by rental duration so they can recommend the longest rentals. Use a ranking function.,"SELECT title, rental_duration, RANK() OVER (ORDER BY rental_duration DESC) AS rank FROM film;",medium
7,"The marketing department wants to see customers ordered by how much they have paid, while also showing their relative standing compared to others. Use a window function to compute a running total of payments.","SELECT customer_id, SUM(amount) AS total_paid, SUM(SUM(amount)) OVER (ORDER BY SUM(amount)) AS running_total FROM payment GROUP BY customer_id;",medium
8,"The analysts want to know the average payment amount overall and also per customer, while still seeing the difference from the overall average. Use window functions.","SELECT customer_id, AVG(amount) AS avg_customer, AVG(amount) OVER() AS avg_all, AVG(amount) - AVG(amount) OVER() AS diff FROM payment GROUP BY customer_id;",medium
9,A manager wants to check for each film how its length compares to the average length of all films. Use a window average.,"SELECT title, length, AVG(length) OVER() AS avg_length FROM film;",medium
10,"The staff is curious to see the order in which rentals occurred for each customer, like a timeline. Use row_number partitioned by customer.","SELECT customer_id, rental_id, rental_date, ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY rental_date) AS rental_number FROM rental;",medium
,,
